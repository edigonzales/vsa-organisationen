package ch.so.agi.vsa.cayenne.auto;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

import org.apache.cayenne.BaseDataObject;
import org.apache.cayenne.exp.property.NumericProperty;
import org.apache.cayenne.exp.property.PropertyFactory;
import org.apache.cayenne.exp.property.StringProperty;

/**
 * Class _Organisation was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Organisation extends BaseDataObject {

    private static final long serialVersionUID = 1L;

    public static final String T_ID_PK_COLUMN = "T_Id";

    public static final StringProperty<String> ASTATUS = PropertyFactory.createString("astatus", String.class);
    public static final StringProperty<String> AUID = PropertyFactory.createString("auid", String.class);
    public static final StringProperty<String> BEMERKUNG = PropertyFactory.createString("bemerkung", String.class);
    public static final StringProperty<String> BEZEICHNUNG = PropertyFactory.createString("bezeichnung", String.class);
    public static final NumericProperty<Integer> GEMEINDENUMMER = PropertyFactory.createNumeric("gemeindenummer", Integer.class);
    public static final StringProperty<String> KURZBEZEICHNUNG = PropertyFactory.createString("kurzbezeichnung", String.class);
    public static final StringProperty<String> LETZTE_AENDERUNG = PropertyFactory.createString("letzteAenderung", String.class);
    public static final StringProperty<String> ORGANISATIONSTYP = PropertyFactory.createString("organisationstyp", String.class);
    public static final StringProperty<String> T_ILI_TID = PropertyFactory.createString("tIliTid", String.class);

    protected String astatus;
    protected String auid;
    protected String bemerkung;
    protected String bezeichnung;
    protected Integer gemeindenummer;
    protected String kurzbezeichnung;
    protected String letzteAenderung;
    protected String organisationstyp;
    protected String tIliTid;


    public void setAstatus(String astatus) {
        beforePropertyWrite("astatus", this.astatus, astatus);
        this.astatus = astatus;
    }

    public String getAstatus() {
        beforePropertyRead("astatus");
        return this.astatus;
    }

    public void setAuid(String auid) {
        beforePropertyWrite("auid", this.auid, auid);
        this.auid = auid;
    }

    public String getAuid() {
        beforePropertyRead("auid");
        return this.auid;
    }

    public void setBemerkung(String bemerkung) {
        beforePropertyWrite("bemerkung", this.bemerkung, bemerkung);
        this.bemerkung = bemerkung;
    }

    public String getBemerkung() {
        beforePropertyRead("bemerkung");
        return this.bemerkung;
    }

    public void setBezeichnung(String bezeichnung) {
        beforePropertyWrite("bezeichnung", this.bezeichnung, bezeichnung);
        this.bezeichnung = bezeichnung;
    }

    public String getBezeichnung() {
        beforePropertyRead("bezeichnung");
        return this.bezeichnung;
    }

    public void setGemeindenummer(Integer gemeindenummer) {
        beforePropertyWrite("gemeindenummer", this.gemeindenummer, gemeindenummer);
        this.gemeindenummer = gemeindenummer;
    }

    public Integer getGemeindenummer() {
        beforePropertyRead("gemeindenummer");
        return this.gemeindenummer;
    }

    public void setKurzbezeichnung(String kurzbezeichnung) {
        beforePropertyWrite("kurzbezeichnung", this.kurzbezeichnung, kurzbezeichnung);
        this.kurzbezeichnung = kurzbezeichnung;
    }

    public String getKurzbezeichnung() {
        beforePropertyRead("kurzbezeichnung");
        return this.kurzbezeichnung;
    }

    public void setLetzteAenderung(String letzteAenderung) {
        beforePropertyWrite("letzteAenderung", this.letzteAenderung, letzteAenderung);
        this.letzteAenderung = letzteAenderung;
    }

    public String getLetzteAenderung() {
        beforePropertyRead("letzteAenderung");
        return this.letzteAenderung;
    }

    public void setOrganisationstyp(String organisationstyp) {
        beforePropertyWrite("organisationstyp", this.organisationstyp, organisationstyp);
        this.organisationstyp = organisationstyp;
    }

    public String getOrganisationstyp() {
        beforePropertyRead("organisationstyp");
        return this.organisationstyp;
    }

    public void setTIliTid(String tIliTid) {
        beforePropertyWrite("tIliTid", this.tIliTid, tIliTid);
        this.tIliTid = tIliTid;
    }

    public String getTIliTid() {
        beforePropertyRead("tIliTid");
        return this.tIliTid;
    }

    @Override
    public Object readPropertyDirectly(String propName) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch(propName) {
            case "astatus":
                return this.astatus;
            case "auid":
                return this.auid;
            case "bemerkung":
                return this.bemerkung;
            case "bezeichnung":
                return this.bezeichnung;
            case "gemeindenummer":
                return this.gemeindenummer;
            case "kurzbezeichnung":
                return this.kurzbezeichnung;
            case "letzteAenderung":
                return this.letzteAenderung;
            case "organisationstyp":
                return this.organisationstyp;
            case "tIliTid":
                return this.tIliTid;
            default:
                return super.readPropertyDirectly(propName);
        }
    }

    @Override
    public void writePropertyDirectly(String propName, Object val) {
        if(propName == null) {
            throw new IllegalArgumentException();
        }

        switch (propName) {
            case "astatus":
                this.astatus = (String)val;
                break;
            case "auid":
                this.auid = (String)val;
                break;
            case "bemerkung":
                this.bemerkung = (String)val;
                break;
            case "bezeichnung":
                this.bezeichnung = (String)val;
                break;
            case "gemeindenummer":
                this.gemeindenummer = (Integer)val;
                break;
            case "kurzbezeichnung":
                this.kurzbezeichnung = (String)val;
                break;
            case "letzteAenderung":
                this.letzteAenderung = (String)val;
                break;
            case "organisationstyp":
                this.organisationstyp = (String)val;
                break;
            case "tIliTid":
                this.tIliTid = (String)val;
                break;
            default:
                super.writePropertyDirectly(propName, val);
        }
    }

    private void writeObject(ObjectOutputStream out) throws IOException {
        writeSerialized(out);
    }

    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        readSerialized(in);
    }

    @Override
    protected void writeState(ObjectOutputStream out) throws IOException {
        super.writeState(out);
        out.writeObject(this.astatus);
        out.writeObject(this.auid);
        out.writeObject(this.bemerkung);
        out.writeObject(this.bezeichnung);
        out.writeObject(this.gemeindenummer);
        out.writeObject(this.kurzbezeichnung);
        out.writeObject(this.letzteAenderung);
        out.writeObject(this.organisationstyp);
        out.writeObject(this.tIliTid);
    }

    @Override
    protected void readState(ObjectInputStream in) throws IOException, ClassNotFoundException {
        super.readState(in);
        this.astatus = (String)in.readObject();
        this.auid = (String)in.readObject();
        this.bemerkung = (String)in.readObject();
        this.bezeichnung = (String)in.readObject();
        this.gemeindenummer = (Integer)in.readObject();
        this.kurzbezeichnung = (String)in.readObject();
        this.letzteAenderung = (String)in.readObject();
        this.organisationstyp = (String)in.readObject();
        this.tIliTid = (String)in.readObject();
    }

}
